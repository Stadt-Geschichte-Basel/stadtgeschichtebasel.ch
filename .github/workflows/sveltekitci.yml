name: SvelteKit CI

on:
  pull_request:
  pull_request_target:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  ci:
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
  
    strategy:
      matrix:
        event: ['pull_request', 'pull_request_target']

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        if: matrix.event == github.event_name

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm run lint

      - name: Prebuild
        run: pnpm run prebuild

      - name: Build
        run: pnpm run build

      - name: Postbuild
        run: pnpm run postbuild

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        if: github.event_name == 'pull_request_target'
        with:
          path: './build'

      - name: Deploy to GitHub Pages
        id: deployment
        if: github.event_name == 'pull_request_target'
        uses: actions/deploy-pages@v2
        with:
          preview: true
